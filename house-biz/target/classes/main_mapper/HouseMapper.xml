<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.okcoin.house.dao.main.HouseMapper">
  <resultMap id="BaseResultMap" type="com.okcoin.house.api.domain.House">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="type" jdbcType="BIT" property="type" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="area" jdbcType="INTEGER" property="area" />
    <result column="beds" jdbcType="INTEGER" property="beds" />
    <result column="baths" jdbcType="INTEGER" property="baths" />
    <result column="rating" jdbcType="DOUBLE" property="rating" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="properties" jdbcType="VARCHAR" property="properties" />
    <result column="floor_plan" jdbcType="VARCHAR" property="floorPlan" />
    <result column="tags" jdbcType="VARCHAR" property="tags" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="city_id" jdbcType="INTEGER" property="cityId" />
    <result column="community_id" jdbcType="INTEGER" property="communityId" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="state" jdbcType="BIT" property="state" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, type, price, image, area, beds, baths, rating, remarks, properties, floor_plan, 
    tags, create_time, city_id, community_id, address, state
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from house
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from house
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.okcoin.house.api.domain.House" useGeneratedKeys="true">
    insert into house (name, type, price, 
      image, area, beds, 
      baths, rating, remarks, 
      properties, floor_plan, tags, 
      create_time, city_id, community_id, 
      address, state)
    values (#{name,jdbcType=VARCHAR}, #{type,jdbcType=BIT}, #{price,jdbcType=DECIMAL}, 
      #{image,jdbcType=VARCHAR}, #{area,jdbcType=INTEGER}, #{beds,jdbcType=INTEGER}, 
      #{baths,jdbcType=INTEGER}, #{rating,jdbcType=DOUBLE}, #{remarks,jdbcType=VARCHAR}, 
      #{properties,jdbcType=VARCHAR}, #{floorPlan,jdbcType=VARCHAR}, #{tags,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{cityId,jdbcType=INTEGER}, #{communityId,jdbcType=INTEGER}, 
      #{address,jdbcType=VARCHAR}, #{state,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.okcoin.house.api.domain.House" useGeneratedKeys="true">
    insert into house
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="image != null">
        image,
      </if>
      <if test="area != null">
        area,
      </if>
      <if test="beds != null">
        beds,
      </if>
      <if test="baths != null">
        baths,
      </if>
      <if test="rating != null">
        rating,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="properties != null">
        properties,
      </if>
      <if test="floorPlan != null">
        floor_plan,
      </if>
      <if test="tags != null">
        tags,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="cityId != null">
        city_id,
      </if>
      <if test="communityId != null">
        community_id,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="state != null">
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=BIT},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="image != null">
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        #{area,jdbcType=INTEGER},
      </if>
      <if test="beds != null">
        #{beds,jdbcType=INTEGER},
      </if>
      <if test="baths != null">
        #{baths,jdbcType=INTEGER},
      </if>
      <if test="rating != null">
        #{rating,jdbcType=DOUBLE},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="properties != null">
        #{properties,jdbcType=VARCHAR},
      </if>
      <if test="floorPlan != null">
        #{floorPlan,jdbcType=VARCHAR},
      </if>
      <if test="tags != null">
        #{tags,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cityId != null">
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="communityId != null">
        #{communityId,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.okcoin.house.api.domain.House">
    update house
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=BIT},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="image != null">
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        area = #{area,jdbcType=INTEGER},
      </if>
      <if test="beds != null">
        beds = #{beds,jdbcType=INTEGER},
      </if>
      <if test="baths != null">
        baths = #{baths,jdbcType=INTEGER},
      </if>
      <if test="rating != null">
        rating = #{rating,jdbcType=DOUBLE},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="properties != null">
        properties = #{properties,jdbcType=VARCHAR},
      </if>
      <if test="floorPlan != null">
        floor_plan = #{floorPlan,jdbcType=VARCHAR},
      </if>
      <if test="tags != null">
        tags = #{tags,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cityId != null">
        city_id = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="communityId != null">
        community_id = #{communityId,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.okcoin.house.api.domain.House">
    update house
    set name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=BIT},
      price = #{price,jdbcType=DECIMAL},
      image = #{image,jdbcType=VARCHAR},
      area = #{area,jdbcType=INTEGER},
      beds = #{beds,jdbcType=INTEGER},
      baths = #{baths,jdbcType=INTEGER},
      rating = #{rating,jdbcType=DOUBLE},
      remarks = #{remarks,jdbcType=VARCHAR},
      properties = #{properties,jdbcType=VARCHAR},
      floor_plan = #{floorPlan,jdbcType=VARCHAR},
      tags = #{tags,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      city_id = #{cityId,jdbcType=INTEGER},
      community_id = #{communityId,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      state = #{state,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <cache />
</mapper>