<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.okcoin.house.dao.main.UserMapper">
  <resultMap id="BaseResultMap" type="com.okcoin.house.api.domain.User">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="phone" jdbcType="CHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="aboutme" jdbcType="VARCHAR" property="aboutme" />
    <result column="passwd" jdbcType="VARCHAR" property="passwd" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="type" jdbcType="BIT" property="type" />
    <result column="create_time" jdbcType="DATE" property="createTime" />
    <result column="enable" jdbcType="BIT" property="enable" />
    <result column="agency_id" jdbcType="INTEGER" property="agencyId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, phone, email, aboutme, passwd, avatar, type, create_time, enable, agency_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.okcoin.house.api.domain.User" useGeneratedKeys="true">
    insert into user (name, phone, email, 
      aboutme, passwd, avatar, 
      type, create_time, enable, agency_id
      )
    values (#{name,jdbcType=VARCHAR}, #{phone,jdbcType=CHAR}, #{email,jdbcType=VARCHAR}, 
      #{aboutme,jdbcType=VARCHAR}, #{passwd,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, 
      #{type,jdbcType=BIT}, #{createTime,jdbcType=DATE}, #{enable,jdbcType=BIT}, #{agencyId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.okcoin.house.api.domain.User" useGeneratedKeys="true">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="aboutme != null">
        aboutme,
      </if>
      <if test="passwd != null">
        passwd,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="enable != null">
        enable,
      </if>
      <if test="agencyId != null">
        agency_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=CHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="aboutme != null">
        #{aboutme,jdbcType=VARCHAR},
      </if>
      <if test="passwd != null">
        #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=DATE},
      </if>
      <if test="enable != null">
        #{enable,jdbcType=BIT},
      </if>
      <if test="agencyId != null">
        #{agencyId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.okcoin.house.api.domain.User">
    update user
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=CHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="aboutme != null">
        aboutme = #{aboutme,jdbcType=VARCHAR},
      </if>
      <if test="passwd != null">
        passwd = #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="enable != null">
        enable = #{enable,jdbcType=BIT},
      </if>
      <if test="agencyId != null">
        agency_id = #{agencyId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.okcoin.house.api.domain.User">
    update user
    set name = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=CHAR},
      email = #{email,jdbcType=VARCHAR},
      aboutme = #{aboutme,jdbcType=VARCHAR},
      passwd = #{passwd,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      type = #{type,jdbcType=BIT},
      create_time = #{createTime,jdbcType=DATE},
      enable = #{enable,jdbcType=BIT},
      agency_id = #{agencyId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <cache />
</mapper>